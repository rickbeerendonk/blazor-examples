<!-- European Union Public License version 1.2 -->
<!-- Copyright © 2021 Rick Beerendonk -->

@inject ITodosService TodosService

@if (todos == null)
{
    <p>Loading TODO's...</p>
}
else
{
    <ul>
    @foreach (var todo in todos)
        {
            <li>@todo.Completed - @todo.Title</li>
        }
    </ul>
}

<button @onclick="Update">Update</button>

@code {
    private Todo[]? todos;

    private async Task Update()
    {
        // Update 2nd item
        if (todos?.Length > 2)
        {
            Todo todo = todos[1];
            await TodosService.UpdateAsync(new Todo { Id = todo.Id, Title = todo.Title, Completed = !todo.Completed });
        }

        // Add item
        await TodosService.AddAsync(new Todo { Title = $"New item @ {DateTime.Now}", Completed = false });

        // Delete first item
        if (todos?.Length > 1)
        {
            await TodosService.DeleteAsync(todos[0]);
        }

        // Get all items
        todos = await TodosService.TodosAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        todos = await TodosService.TodosAsync();
    }
}