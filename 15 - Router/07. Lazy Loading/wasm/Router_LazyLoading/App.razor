<!-- European Union Public License version 1.2 -->
<!-- Copyright © 2021 Rick Beerendonk -->

@using System.Reflection
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@inject LazyAssemblyLoader lazyAssemblyLoader;

<Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="@lazyLoadedAssemblies"
    OnNavigateAsync="@OnNavigateAsync">
    <Navigating>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>Loading the requested page&hellip;</p>
        </LayoutView>
    </Navigating>
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
    </Found>
    <NotFound>
        <LayoutView Layout="@typeof(MainLayout)">
            <p>404 Not Found</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    private List<Assembly> lazyLoadedAssemblies = new List<Assembly>() { };

    private async Task OnNavigateAsync(NavigationContext context)
    {
        if (context.Path.StartsWith("page2"))
        {
            var assemblies = await lazyAssemblyLoader.LoadAssembliesAsync(
                new List<string>() { "Router_LazyLoading_Lib.dll" });
            lazyLoadedAssemblies.AddRange(assemblies);

            //Console.WriteLine($"OnNavigateAsync: {lazyLoadedAssemblies.Count}");
        }
    }
}